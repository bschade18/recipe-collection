{"version":3,"sources":["components/RecipeList.js","components/RecipeDisplay.js","components/RecipeForm.js","App.js","serviceWorker.js","index.js"],"names":["RecipeList","props","recipeList","recipes","map","recipe","index","id","key","onClick","setCurrent","recipeTitle","RecipeDisplay","showRecipe","currentRecipe","i","length","className","handleForm","handleDelete","recipeIngredients","ingredient","j","recipeSteps","step","k","RecipeForm","visibility","dialogMode","onChange","placeholder","name","value","type","rows","addRecipe","handleEdit","toggleVisibility","localStorage","getItem","setItem","JSON","stringify","App","state","toLowerCase","alert","updatedRecipes","concat","split","setState","updatedList","filter","newIndex","confirmDelete","window","confirm","e","target","fillForm","formRecipe","join","handleFormType","innerHTML","parse","this","pageMask","display","background","position","top","right","bottom","left","zIndex","editRecipe","style","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c17b23b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst RecipeList = props => {\n  const recipeList = props.recipes.map((recipe, index) => {\n    return (\n      <div id=\"recipe-title\" key={index} onClick={props.setCurrent}>\n        {recipe.recipeTitle}\n      </div>\n    );\n  });\n\n  return <div id=\"recipe-list\">{recipeList}</div>;\n};\n\nexport default RecipeList;\n","import React from \"react\";\n\nfunction RecipeDisplay(props) {\n  let showRecipe;\n  let recipes = props.recipes;\n  let currentRecipe = props.currentRecipe;\n  for (var i = 0; i < recipes.length; i++) {\n    if (currentRecipe === recipes[i].recipeTitle) {\n      showRecipe = (\n        <div className=\"recipeBox\">\n          <div className=\"recipeDisplay\">\n            <div id=\"show-recipe-title\" className=\"recipe-display-pane\">\n              {currentRecipe}\n            </div>\n            <div className=\"recipe-display-pane\">\n              <i\n                id=\"edit\"\n                onClick={props.handleForm}\n                className=\"fas fa-edit\"\n              ></i>\n\n              <i onClick={props.handleDelete} className=\"fas fa-trash\"></i>\n              <i\n                id=\"add-btn\"\n                onClick={props.handleForm}\n                className=\"fas fa-plus\"\n              ></i>\n            </div>\n          </div>\n          <p className=\"ingredients-heading\">Ingredients:</p>\n          <ul className=\"show-ingredients\">\n            {recipes[i].recipeIngredients.map((ingredient, j) => (\n              <li className=\"list-ingredients\" key={j}>\n                {ingredient}\n              </li>\n            ))}\n          </ul>\n          <p className=\"directions-heading\">Directions:</p>\n          <ol>\n            {recipes[i].recipeSteps.map((step, k) => (\n              <li className=\"list-directions\" key={k}>\n                {step}\n              </li>\n            ))}\n          </ol>\n        </div>\n      );\n    }\n  }\n  if (props.recipes.length > 0) {\n    return <div>{showRecipe}</div>;\n  } else {\n    return (\n      <div className=\"recipeBox\">\n        <div className=\"recipeDisplay\">\n          <div className=\"recipe-display-pane\">\n            <i id=\"edit\" onClick={props.handleForm} className=\"fas fa-edit\"></i>\n\n            <i onClick={props.handleDelete} className=\"fas fa-trash\"></i>\n            <i\n              id=\"add-btn\"\n              onClick={props.handleForm}\n              className=\"fas fa-plus\"\n            ></i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RecipeDisplay;\n","import React from \"react\";\n\nfunction RecipeForm(props) {\n  if (props.visibility) {\n    return (\n      <div className=\"dialog\">\n        <label className=\"input-title\">\n          {props.dialogMode === \"add\" ? \"Add Recipe\" : \"Edit Recipe\"}\n          <br />\n        </label>\n        <textarea\n          onChange={props.onChange}\n          id=\"edit-recipe\"\n          placeholder=\"Recipe Name\"\n          name=\"recipeTitle\"\n          value={props.recipeTitle}\n          type=\"text\"\n          rows=\"1\"\n        >\n          {props.recipeTitle}\n        </textarea>\n        <br />\n        <label className=\"input-title\">\n          Ingredients\n          <br />\n        </label>\n        <textarea\n          id=\"edit-ingredients\"\n          value={props.recipeIngredients}\n          name=\"recipeIngredients\"\n          onChange={props.onChange}\n          placeholder='Separate each ingredient with a \"/\" : Eggs / Flour / Cookie Mix'\n          type=\"text\"\n        >\n          {props.recipeIngredients}\n        </textarea>\n        <br />\n        <label className=\"input-title\">\n          Directions\n          <br />\n        </label>\n        <textarea\n          id=\"edit-steps\"\n          value={props.recipeSteps}\n          name=\"recipeSteps\"\n          onChange={props.onChange}\n          placeholder='Seperate each direction with a \"/\" : Mix eggs and flour in a bowl / Add cookie mix / Cook in oven '\n          type=\"text\"\n        >\n          {props.recipeSteps}\n        </textarea>\n\n        <div className=\"form-btns\">\n          <button\n            id=\"add-save-btn\"\n            onClick={\n              props.dialogMode === \"add\" ? props.addRecipe : props.handleEdit\n            }\n          >\n            {props.dialogMode === \"add\" ? \"Add\" : \"Save\"}\n          </button>\n\n          <button id=\"close-dialog-btn\" onClick={props.toggleVisibility}>\n            Close\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default RecipeForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport RecipeList from \"./components/RecipeList\";\nimport RecipeDisplay from \"./components/RecipeDisplay\";\nimport RecipeForm from \"./components/RecipeForm\";\n\nlet starter = [\n  {\n    recipeTitle: \"Cookies\",\n    recipeIngredients: [\"Eggs\", \"Flour\", \"Cookie mix\"],\n    recipeSteps: [\n      \"Mix eggs and flour in a bowl\",\n      \"Add cookie mix\",\n      \"Cook in oven for 12 minutes\",\n      \"Serve and enjoy :)\"\n    ]\n  }\n];\nif (!localStorage.getItem(\"_bschade18_recipes\")) {\n  localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(starter));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: JSON.parse(localStorage.getItem(\"_bschade18_recipes\")),\n      currentRecipe: \"\",\n      recipeTitle: \"\",\n      recipeIngredients: \"\",\n      recipeSteps: \"\",\n      visibility: false,\n      dialogMode: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let recipes = JSON.parse(localStorage.getItem(\"_bschade18_recipes\"));\n\n    if (recipes.length > 0) {\n      let recipe = recipes[0].recipeTitle;\n\n      this.setState({\n        currentRecipe: recipe\n      });\n    }\n  }\n\n  addRecipe = () => {\n    const recipeList = this.state.recipes;\n    for (var i = 0; i < recipeList.length; i++) {\n      if (\n        recipeList[i].recipeTitle.toLowerCase() ===\n        this.state.recipeTitle.toLowerCase()\n      ) {\n        alert(\"That recipe already exists\");\n        return;\n      } else if (this.state.recipeTitle === \"\") {\n        alert(\"Enter a recipe name\");\n        return;\n      }\n      let updatedRecipes = recipeList.concat({\n        recipeTitle: this.state.recipeTitle,\n        recipeIngredients: this.state.recipeIngredients.split(\"/\"),\n        recipeSteps: this.state.recipeSteps.split(\"/\")\n      });\n      localStorage.setItem(\n        \"_bschade18_recipes\",\n        JSON.stringify(updatedRecipes)\n      );\n      this.setState({\n        visibility: false,\n        recipes: updatedRecipes,\n        currentRecipe: this.state.recipeTitle,\n        recipeTitle: \"\",\n        recipeIngredients: \"\",\n        recipeSteps: \"\"\n      });\n    }\n  };\n\n  handleEdit = () => {\n    const recipeList = this.state.recipes.filter(recipe => {\n      return this.state.currentRecipe !== recipe.recipeTitle;\n    });\n    const updatedList = recipeList.concat({\n      recipeTitle: this.state.recipeTitle,\n      recipeIngredients: this.state.recipeIngredients.split(\"/\"),\n      recipeSteps: this.state.recipeSteps.split(\"/\")\n    });\n\n    localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(updatedList));\n    this.setState({\n      recipes: updatedList,\n      visibility: false,\n      recipeTitle: \"\",\n      recipeIngredients: \"\",\n      recipeSteps: \"\"\n    });\n  };\n\n  handleDelete = () => {\n    const recipes = this.state.recipes;\n    let newIndex;\n\n    for (var i = 0; i < recipes.length; i++) {\n      if (recipes[i].recipeTitle === this.state.currentRecipe) {\n        newIndex = i;\n      }\n    }\n    let confirmDelete = window.confirm(\n      \"Are you sure you want to delete this recipe?\"\n    );\n\n    let filter = recipes.filter(recipe => {\n      return recipe.recipeTitle !== this.state.currentRecipe;\n    });\n\n    newIndex = newIndex === 0 ? 1 : newIndex - 1;\n\n    if (confirmDelete === true) {\n      if (recipes.length === 0) {\n        localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(filter));\n        this.setState({\n          currentRecipe: \"\"\n        });\n      }\n      localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(filter));\n      this.setState({\n        recipes: filter,\n        currentRecipe: recipes[newIndex].recipeTitle\n      });\n    }\n  };\n\n  onChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  fillForm = () => {\n    const formRecipe = this.state.recipes.filter(recipe => {\n      return recipe.recipeTitle === this.state.currentRecipe;\n    });\n\n    this.setState({\n      recipeTitle: formRecipe[0].recipeTitle,\n      recipeIngredients: formRecipe[0].recipeIngredients.join(\" / \"),\n      recipeSteps: formRecipe[0].recipeSteps.join(\" / \")\n    });\n  };\n\n  handleFormType = e => {\n    if (e.target.id === \"edit\") {\n      this.setState({\n        dialogMode: \"edit\",\n        visibility: true\n      });\n      this.fillForm();\n    } else {\n      this.setState({\n        dialogMode: \"add\",\n        visibility: true\n      });\n    }\n  };\n\n  toggleVisibility = () => {\n    this.setState({\n      visibility: !this.state.visibility,\n      recipeTitle: \"\",\n      recipeIngredients: \"\",\n      recipeSteps: \"\"\n    });\n  };\n\n  setCurrent = e => {\n    this.setState({\n      currentRecipe: e.target.innerHTML\n    });\n  };\n\n  render() {\n    let pageMask = {\n      display: \"none\",\n      background: \"rgba(0, 0, 0, 0.4)\",\n      position: \"fixed\",\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      zIndex: 1\n    };\n\n    if (this.state.visibility) {\n      pageMask = {\n        display: \"block\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        position: \"fixed\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        zIndex: 1\n      };\n    }\n    return (\n      <div id=\"App\">\n        <h1 id=\"title\">My Recipes</h1>\n        <RecipeForm\n          recipes={this.state.recipes}\n          recipeTitle={this.state.recipeTitle}\n          recipeIngredients={this.state.recipeIngredients}\n          recipeSteps={this.state.recipeSteps}\n          currentRecipe={this.state.currentRecipe}\n          addRecipe={this.addRecipe}\n          editRecipe={this.handleEdit}\n          toggleVisibility={this.toggleVisibility}\n          visibility={this.state.visibility}\n          dialogMode={this.state.dialogMode}\n          onChange={this.onChange}\n          handleEdit={this.handleEdit}\n        />\n        <RecipeList recipes={this.state.recipes} setCurrent={this.setCurrent} />\n        <RecipeDisplay\n          recipes={this.state.recipes}\n          currentRecipe={this.state.currentRecipe}\n          handleDelete={this.handleDelete}\n          handleForm={this.handleFormType}\n        />\n\n        <div style={pageMask}></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}