{"version":3,"sources":["components/RecipeList.js","components/RecipeDisplay.js","components/RecipeForm.js","App.js","serviceWorker.js","index.js"],"names":["RecipeList","props","list","recipes","map","recipe","index","id","key","onClick","setCurrent","recipeTitle","RecipeDisplay","state","showRecipe","this","currentRecipe","i","length","className","handleForm","handleDelete","ingredients","ingredient","j","steps","step","k","React","Component","RecipeForm","visibility","formText","placeholder","type","cols","rows","formFunctions","formID","closeVisibility","localStorage","getItem","setItem","JSON","stringify","App","parse","dialogMode","addRecipe","bind","fillForm","handleEdit","handleFormType","setState","document","getElementById","value","join","event","updatedList","filter","concat","split","setTimeout","e","target","recipeArray","recipeList","push","toLowerCase","includes","alert","updatedRecipes","recipeInput","ingredInput","stepsInput","innerHTML","newIndex","confirmDelete","window","confirm","toggleVisibility","editRecipe","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wSAceA,G,MAZI,SAAAC,GACjB,IAAIC,EAAOD,EAAME,QAAQC,KAAI,SAACC,EAAQC,GACpC,OACE,yBAAKC,GAAG,eAAeC,IAAKF,EAAOG,QAASR,EAAMS,YAC/CL,EAAOM,gBAKd,OAAO,yBAAKJ,GAAG,eAAeL,K,OCqDjBU,E,YA7Db,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,GAFI,E,sEASjB,IAHA,IAAIC,EACAX,EAAUY,KAAKd,MAAME,QACrBa,EAAgBD,KAAKd,MAAMe,cACtBC,EAAI,EAAGA,EAAId,EAAQe,OAAQD,IAC9BD,IAAkBb,EAAQc,GAAGN,cAC/BG,EACE,yBAAKK,UAAU,aACb,yBAAKA,UAAU,iBACb,yBAAKZ,GAAG,oBAAoBY,UAAU,uBACnCH,GAEH,yBAAKG,UAAU,uBACb,mCACEZ,GAAG,OACHY,UAAU,GACVV,QAASM,KAAKd,MAAMmB,YAHtB,YAIY,gBAGZ,uBACEX,QAASM,KAAKd,MAAMoB,aACpBF,UAAU,iBAEZ,uBACEZ,GAAG,UACHE,QAASM,KAAKd,MAAMmB,WACpBD,UAAU,kBAIhB,uBAAGA,UAAU,uBAAb,gBACA,wBAAIA,UAAU,oBACXhB,EAAQc,GAAGK,YAAYlB,KAAI,SAACmB,EAAYC,GAAb,OAC1B,wBAAIL,UAAU,mBAAmBX,IAAKgB,GACnCD,OAIP,uBAAGJ,UAAU,sBAAb,eACA,4BACGhB,EAAQc,GAAGQ,MAAMrB,KAAI,SAACsB,EAAMC,GAAP,OACpB,wBAAIR,UAAU,kBAAkBX,IAAKmB,GAClCD,SASf,OAAO,6BAAMZ,O,GA1DWc,IAAMC,WCiEnBC,E,YAhEb,WAAY7B,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,GAFI,E,sEAMjB,OAAIE,KAAKd,MAAM8B,WAEX,yBAAKxB,GAAG,UACN,6BACE,yBAAKY,UAAU,eACZJ,KAAKd,MAAM+B,SAAS,GACrB,8BAEF,8BACEzB,GAAG,cACH0B,YAAY,cACZC,KAAK,OACLC,KAAK,KACLC,KAAK,MAEP,6BACA,yBAAKjB,UAAU,eAAf,cAEE,8BAEF,8BACEZ,GAAG,mBACH4B,KAAK,KACLC,KAAK,IACLH,YAAY,sEACZC,KAAK,SAEP,6BACA,yBAAKf,UAAU,eAAf,aAEE,8BAEF,8BACEZ,GAAG,aACH4B,KAAK,KACLC,KAAK,KACLH,YAAY,4GACZC,KAAK,UAGT,yBAAKf,UAAU,aACb,4BACEV,QAASM,KAAKd,MAAMoC,cACpB9B,GAAIQ,KAAKd,MAAMqC,OAAO,IAErBvB,KAAKd,MAAM+B,SAAS,IAGvB,4BAAQvB,QAASM,KAAKd,MAAMsC,iBAA5B,WAKC,kC,GA5DYX,IAAMC,WCgB1BW,aAAaC,QAAQ,uBACxBD,aAAaE,QAAQ,qBAAsBC,KAAKC,UAbpC,CACZ,CACEjC,YAAa,UACbW,YAAa,CAAC,OAAQ,QAAS,cAC/BG,MAAO,CACL,+BACA,iBACA,8BACA,0B,IAyNSoB,E,YAhNb,WAAY5C,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXkB,YAAY,EACZf,cAAe,GACfb,QAASwC,KAAKG,MAAMN,aAAaC,QAAQ,uBACzCM,WAAY,IAEd,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAEjB,EAAKV,gBAAkB,EAAKA,gBAAgBU,KAArB,gBACvB,EAAKvC,WAAa,EAAKA,WAAWuC,KAAhB,gBAElB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAK5B,aAAe,EAAKA,aAAa4B,KAAlB,gBACpB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAElB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBAjBL,E,iFAoBjB,IAAI9C,EAAUqC,aAAaC,QAAQ,sBAG/BpC,EAFasC,KAAKG,MAAM3C,GAEJ,GAAGQ,YAE3BI,KAAKsC,SAAS,CACZrC,cAAeX,M,iCAOjB,IAHA,IAEIA,EAFAW,EAAgBD,KAAKF,MAAMG,cAC3Bb,EAAUY,KAAKF,MAAMV,QAEhBc,EAAI,EAAGA,EAAId,EAAQe,OAAQD,IAC9BD,IAAkBb,EAAQc,GAAGN,cAC/BN,EAASF,EAAQc,IAGrBqC,SAASC,eAAe,eAAeC,MAAQnD,EAAOM,YACtD2C,SAASC,eAAe,oBAAoBC,MAAQnD,EAAOiB,YAAYmC,KACrE,OAEFH,SAASC,eAAe,cAAcC,MAAQnD,EAAOoB,MAAMgC,KAAK,S,iCAGvDC,GAAQ,IAAD,OACZvD,EAAUY,KAAKF,MAAMV,QACrBa,EAAgBD,KAAKF,MAAMG,cAI3B2C,EAHOxD,EAAQyD,QAAO,SAAAvD,GACxB,OAAOW,IAAkBX,EAAOM,eAEXkD,OAAO,CAC5BlD,YAAa2C,SAASC,eAAe,eAAeC,MACpDlC,YAAagC,SAASC,eAAe,oBAAoBC,MAAMM,MAAM,KACrErC,MAAO6B,SAASC,eAAe,cAAcC,MAAMM,MAAM,OAG3DC,YAAW,WACTvB,aAAaE,QAAQ,qBAAsBC,KAAKC,UAAUe,IAC1D,EAAKN,SAAS,CACZlD,QAASwD,EACT5B,YAAY,MAEb,M,qCAGUiC,GAAI,IAAD,OACI,SAAhBA,EAAEC,OAAO1D,IACXQ,KAAKsC,SAAS,CACZN,WAAY,OACZhB,YAAY,IAEdgC,YAAW,kBAAM,EAAKb,aAAY,KAElCnC,KAAKsC,SAAS,CACZN,WAAY,MACZhB,YAAY,M,gCAIRiC,GAGR,IAFA,IAAIE,EAAcnD,KAAKF,MAAMV,QACzBgE,EAAa,GACRlD,EAAI,EAAGA,EAAIiD,EAAYhD,OAAQD,IACtCkD,EAAWC,KAAKF,EAAYjD,GAAGN,YAAY0D,eAE7C,GACEF,EAAWG,SACThB,SAASC,eAAe,eAAeC,MAAMa,eAG/CE,MAAM,mCAED,GAC0D,KAA/DjB,SAASC,eAAe,eAAeC,MAAMa,cADxC,CAMP,IAAIG,EAAiBN,EAAYL,OAAO,CACtClD,YAAa2C,SAASC,eAAe,eAAeC,MACpDlC,YAAagC,SAASC,eAAe,oBAAoBC,MAAMM,MAAM,KACrErC,MAAO6B,SAASC,eAAe,cAAcC,MAAMM,MAAM,OAE3DtB,aAAaE,QAAQ,qBAAsBC,KAAKC,UAAU4B,IAC1DzD,KAAKsC,SAAS,CACZtB,YAAY,EACZ5B,QAASqE,EACTxD,cAAesC,SAASC,eAAe,eAAeC,MACtDiB,YAAa,GACbC,YAAa,GACbC,WAAY,UAfZJ,MAAM,yB,wCAoBJxD,KAAKF,MAAMkB,WACbhB,KAAKsC,SAAS,CACZtB,YAAY,IAGdhB,KAAKsC,SAAS,CACZtB,YAAY,M,iCAKPiC,GACTjD,KAAKsC,SAAS,CACZrC,cAAegD,EAAEC,OAAOW,c,qCAS1B,IALc,IAGVC,EAHS,OACT1E,EAAUY,KAAKF,MAAMV,QACrBa,EAAgBD,KAAKF,MAAMG,cAGtBC,EAAI,EAAGA,EAAId,EAAQe,OAAQD,IAC9Bd,EAAQc,GAAGN,cAAgBK,IAC7B6D,EAAW5D,EAAI,GAGnB,IAAI6D,EAAgBC,OAAOC,QACzB,gDAGEpB,EAASzD,EAAQyD,QAAO,SAAAvD,GAC1B,OAAOA,EAAOM,cAAgBK,MAGV,IAAlB8D,IACED,EAAW,GACbrC,aAAaE,QAAQ,qBAAsBC,KAAKC,UAAUgB,IAC1DG,YAAW,WACT,EAAKV,SAAS,CACZlD,QAASyD,EACT5C,cAAeb,EAAQ,GAAGQ,gBAE3B,MAEH6B,aAAaE,QAAQ,qBAAsBC,KAAKC,UAAUgB,IAC1DG,YAAW,WACT,EAAKV,SAAS,CACZlD,QAASyD,EACT5C,cAAeb,EAAQ0E,GAAUlE,gBAElC,Q,+BAMP,IAAIqB,EACwB,QAA1BjB,KAAKF,MAAMkC,WACP,CAAC,aAAc,OACf,CAAC,cAAe,QAClBT,EAAmC,QAA1BvB,KAAKF,MAAMkC,WAAuB,CAAC,OAAS,CAAC,QACtDV,EACwB,QAA1BtB,KAAKF,MAAMkC,WAAuBhC,KAAKiC,UAAYjC,KAAKoC,WAC1D,OACE,6BACE,wBAAI5C,GAAG,SAAP,cACA,kBAAC,EAAD,CAAYJ,QAASY,KAAKF,MAAMV,QAASO,WAAYK,KAAKL,aAC1D,kBAAC,EAAD,CACEuE,iBAAkBlE,KAAKkE,iBACvBjE,cAAeD,KAAKF,MAAMG,cAC1Bb,QAASY,KAAKF,MAAMV,QACpBkB,aAAcN,KAAKM,aACnBD,WAAYL,KAAKqC,iBAEnB,kBAAC,EAAD,CACEJ,UAAWjC,KAAKiC,UAChBT,gBAAiBxB,KAAKwB,gBACtBvB,cAAeD,KAAKF,MAAMG,cAC1B+B,WAAYhC,KAAKF,MAAMkC,WACvBmC,WAAYnE,KAAKoC,WACjBnB,SAAUA,EACVM,OAAQA,EACRD,cAAeA,EACfN,WAAYhB,KAAKF,MAAMkB,WACvB5B,QAASY,KAAKF,MAAMV,e,GA1MZyB,IAAMC,WCVJsD,QACW,cAA7BJ,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASlC,SAASC,eAAe,SD2H3C,kBAAmBkC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2a81e475.chunk.js","sourcesContent":["import React from \"react\";\n\nconst RecipeList = props => {\n  let list = props.recipes.map((recipe, index) => {\n    return (\n      <div id=\"recipe-title\" key={index} onClick={props.setCurrent}>\n        {recipe.recipeTitle}\n      </div>\n    );\n  });\n\n  return <div id=\"recipe-list\">{list}</div>;\n};\n\nexport default RecipeList;\n","import React from \"react\";\n\nclass RecipeDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let showRecipe;\n    let recipes = this.props.recipes;\n    let currentRecipe = this.props.currentRecipe;\n    for (var i = 0; i < recipes.length; i++) {\n      if (currentRecipe === recipes[i].recipeTitle) {\n        showRecipe = (\n          <div className=\"recipeBox\">\n            <div className=\"recipeDisplay\">\n              <div id=\"show-recipe-title\" className=\"recipe-display-pane\">\n                {currentRecipe}\n              </div>\n              <div className=\"recipe-display-pane\">\n                <i\n                  id=\"edit\"\n                  className=\"\"\n                  onClick={this.props.handleForm}\n                  className=\"fas fa-edit\"\n                ></i>\n\n                <i\n                  onClick={this.props.handleDelete}\n                  className=\"fas fa-trash\"\n                ></i>\n                <i\n                  id=\"add-btn\"\n                  onClick={this.props.handleForm}\n                  className=\"fas fa-plus\"\n                ></i>\n              </div>\n            </div>\n            <p className=\"ingredients-heading\">Ingredients:</p>\n            <ul className=\"show-ingredients\">\n              {recipes[i].ingredients.map((ingredient, j) => (\n                <li className=\"list-ingredients\" key={j}>\n                  {ingredient}\n                </li>\n              ))}\n            </ul>\n            <p className=\"directions-heading\">Directions:</p>\n            <ol>\n              {recipes[i].steps.map((step, k) => (\n                <li className=\"list-directions\" key={k}>\n                  {step}\n                </li>\n              ))}\n            </ol>\n          </div>\n        );\n      }\n    }\n\n    return <div>{showRecipe}</div>;\n  }\n}\n\nexport default RecipeDisplay;\n","import React from \"react\";\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.visibility) {\n      return (\n        <div id=\"dialog\">\n          <div>\n            <div className=\"input-title\">\n              {this.props.formText[0]}\n              <br />\n            </div>\n            <textarea\n              id=\"edit-recipe\"\n              placeholder=\"Recipe Name\"\n              type=\"text\"\n              cols=\"30\"\n              rows=\"1\"\n            />\n            <br />\n            <div className=\"input-title\">\n              Ingredients\n              <br />\n            </div>\n            <textarea\n              id=\"edit-ingredients\"\n              cols=\"30\"\n              rows=\"6\"\n              placeholder='Separate each ingredient with a \"/\" :     Eggs / Flour / Cookie Mix'\n              type=\"text\"\n            />\n            <br />\n            <div className=\"input-title\">\n              Directions\n              <br />\n            </div>\n            <textarea\n              id=\"edit-steps\"\n              cols=\"30\"\n              rows=\"11\"\n              placeholder='Seperate each direction with a \"/\" :        Mix eggs and flour in a bowl / Add cookie mix / Cook in oven '\n              type=\"text\"\n            />\n          </div>\n          <div className=\"form-btns\">\n            <button\n              onClick={this.props.formFunctions}\n              id={this.props.formID[0]}\n            >\n              {this.props.formText[1]}\n            </button>\n\n            <button onClick={this.props.closeVisibility}>Close</button>\n          </div>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nexport default RecipeForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport RecipeList from \"./components/RecipeList\";\nimport RecipeDisplay from \"./components/RecipeDisplay\";\nimport RecipeForm from \"./components/RecipeForm\";\n\nlet starter = [\n  {\n    recipeTitle: \"Cookies\",\n    ingredients: [\"Eggs\", \"Flour\", \"Cookie mix\"],\n    steps: [\n      \"Mix eggs and flour in a bowl\",\n      \"Add cookie mix\",\n      \"Cook in oven for 12 minutes\",\n      \"Serve and enjoy :)\"\n    ]\n  }\n];\nif (!localStorage.getItem(\"_bschade18_recipes\")) {\n  localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(starter));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibility: false,\n      currentRecipe: \"\",\n      recipes: JSON.parse(localStorage.getItem(\"_bschade18_recipes\")),\n      dialogMode: \"\"\n    };\n    this.addRecipe = this.addRecipe.bind(this);\n\n    this.closeVisibility = this.closeVisibility.bind(this);\n    this.setCurrent = this.setCurrent.bind(this);\n\n    this.fillForm = this.fillForm.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n    this.handleFormType = this.handleFormType.bind(this);\n  }\n  componentDidMount() {\n    let recipes = localStorage.getItem(\"_bschade18_recipes\");\n    let recipesObj = JSON.parse(recipes);\n\n    let recipe = recipesObj[0].recipeTitle;\n\n    this.setState({\n      currentRecipe: recipe\n    });\n  }\n  fillForm() {\n    let currentRecipe = this.state.currentRecipe;\n    let recipes = this.state.recipes;\n    let recipe;\n    for (var i = 0; i < recipes.length; i++) {\n      if (currentRecipe === recipes[i].recipeTitle) {\n        recipe = recipes[i];\n      }\n    }\n    document.getElementById(\"edit-recipe\").value = recipe.recipeTitle;\n    document.getElementById(\"edit-ingredients\").value = recipe.ingredients.join(\n      \" / \"\n    );\n    document.getElementById(\"edit-steps\").value = recipe.steps.join(\" / \");\n  }\n\n  handleEdit(event) {\n    let recipes = this.state.recipes;\n    let currentRecipe = this.state.currentRecipe;\n    let edit = recipes.filter(recipe => {\n      return currentRecipe !== recipe.recipeTitle;\n    });\n    let updatedList = edit.concat({\n      recipeTitle: document.getElementById(\"edit-recipe\").value,\n      ingredients: document.getElementById(\"edit-ingredients\").value.split(\"/\"),\n      steps: document.getElementById(\"edit-steps\").value.split(\"/\")\n    });\n\n    setTimeout(() => {\n      localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(updatedList));\n      this.setState({\n        recipes: updatedList,\n        visibility: false\n      });\n    }, 50);\n  }\n\n  handleFormType(e) {\n    if (e.target.id === \"edit\") {\n      this.setState({\n        dialogMode: \"edit\",\n        visibility: true\n      });\n      setTimeout(() => this.fillForm(), 20);\n    } else {\n      this.setState({\n        dialogMode: \"add\",\n        visibility: true\n      });\n    }\n  }\n  addRecipe(e) {\n    let recipeArray = this.state.recipes;\n    let recipeList = [];\n    for (var i = 0; i < recipeArray.length; i++) {\n      recipeList.push(recipeArray[i].recipeTitle.toLowerCase());\n    }\n    if (\n      recipeList.includes(\n        document.getElementById(\"edit-recipe\").value.toLowerCase()\n      )\n    ) {\n      alert(\"That recipe already exists\");\n      return;\n    } else if (\n      document.getElementById(\"edit-recipe\").value.toLowerCase() === \"\"\n    ) {\n      alert(\"Enter a recipe name\");\n      return;\n    }\n    let updatedRecipes = recipeArray.concat({\n      recipeTitle: document.getElementById(\"edit-recipe\").value,\n      ingredients: document.getElementById(\"edit-ingredients\").value.split(\"/\"),\n      steps: document.getElementById(\"edit-steps\").value.split(\"/\")\n    });\n    localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(updatedRecipes));\n    this.setState({\n      visibility: false,\n      recipes: updatedRecipes,\n      currentRecipe: document.getElementById(\"edit-recipe\").value,\n      recipeInput: \"\",\n      ingredInput: \"\",\n      stepsInput: \"\"\n    });\n  }\n\n  closeVisibility() {\n    if (this.state.visibility) {\n      this.setState({\n        visibility: false\n      });\n    } else {\n      this.setState({\n        visibility: true\n      });\n    }\n  }\n\n  setCurrent(e) {\n    this.setState({\n      currentRecipe: e.target.innerHTML\n    });\n  }\n\n  handleDelete() {\n    let recipes = this.state.recipes;\n    let currentRecipe = this.state.currentRecipe;\n    let newIndex;\n\n    for (var i = 0; i < recipes.length; i++) {\n      if (recipes[i].recipeTitle === currentRecipe) {\n        newIndex = i - 1;\n      }\n    }\n    let confirmDelete = window.confirm(\n      \"Are you sure you want to delete this recipe?\"\n    );\n\n    let filter = recipes.filter(recipe => {\n      return recipe.recipeTitle !== currentRecipe;\n    });\n\n    if (confirmDelete === true) {\n      if (newIndex < 0) {\n        localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(filter));\n        setTimeout(() => {\n          this.setState({\n            recipes: filter,\n            currentRecipe: recipes[1].recipeTitle\n          });\n        }, 20);\n      } else {\n        localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(filter));\n        setTimeout(() => {\n          this.setState({\n            recipes: filter,\n            currentRecipe: recipes[newIndex].recipeTitle\n          });\n        }, 20);\n      }\n    }\n  }\n\n  render() {\n    let formText =\n      this.state.dialogMode === \"add\"\n        ? [\"Add Recipe\", \"Add\"]\n        : [\"Edit Recipe\", \"Save\"];\n    let formID = this.state.dialogMode === \"add\" ? [\"add\"] : [\"edit\"];\n    let formFunctions =\n      this.state.dialogMode === \"add\" ? this.addRecipe : this.handleEdit;\n    return (\n      <div>\n        <h1 id=\"title\">My Recipes</h1>\n        <RecipeList recipes={this.state.recipes} setCurrent={this.setCurrent} />\n        <RecipeDisplay\n          toggleVisibility={this.toggleVisibility}\n          currentRecipe={this.state.currentRecipe}\n          recipes={this.state.recipes}\n          handleDelete={this.handleDelete}\n          handleForm={this.handleFormType}\n        />\n        <RecipeForm\n          addRecipe={this.addRecipe}\n          closeVisibility={this.closeVisibility}\n          currentRecipe={this.state.currentRecipe}\n          dialogMode={this.state.dialogMode}\n          editRecipe={this.handleEdit}\n          formText={formText}\n          formID={formID}\n          formFunctions={formFunctions}\n          visibility={this.state.visibility}\n          recipes={this.state.recipes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}