{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["localStorage","setItem","JSON","stringify","recipeTitle","ingredients","steps","App","props","state","visibility","currentRecipe","recipes","parse","getItem","dialogMode","toggleVisibility","bind","closeVisibility","setCurrent","fillForm","handleDelete","handleEdit","recipe","this","setState","i","length","document","getElementById","value","event","edit","filter","preventDefault","updatedList","concat","split","setTimeout","e","recipeArray","target","id","updatedRecipes","recipeInput","ingredInput","stepsInput","innerHTML","newIndex","confirmDelete","window","confirm","editRecipe","React","Component","RecipeList","list","map","index","key","onClick","RecipeDisplay","showRecipe","cool","console","log","className","ingredient","j","step","k","RecipeForm","placeholder","type","rows","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.231b84fd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nlet starter = [\n  {\n    recipeTitle: \"Cookies\",\n    ingredients: [\"Eggs\", \"Flour\", \"Cookie mix\"],\n    steps: [\n      \"Mix eggs and flour in a bowl\",\n      \"Add cookie mix\",\n      \"Cook in oven for 12 minutes\",\n      \"Serve and enjoy :)\"\n    ]\n  }\n];\nlocalStorage.setItem(\"_bschade18_recipes\", JSON.stringify(starter));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibility: false,\n      currentRecipe: \"\",\n      recipes: JSON.parse(localStorage.getItem(\"_bschade18_recipes\")),\n      dialogMode: \"\"\n    };\n    this.toggleVisibility = this.toggleVisibility.bind(this);\n\n    this.closeVisibility = this.closeVisibility.bind(this);\n    this.setCurrent = this.setCurrent.bind(this);\n\n    this.fillForm = this.fillForm.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n  componentDidMount() {\n    let recipes = localStorage.getItem(\"_bschade18_recipes\");\n    let recipesObj = JSON.parse(recipes);\n\n    let recipe = recipesObj[0].recipeTitle;\n\n    this.setState({\n      currentRecipe: recipe\n    });\n  }\n  fillForm() {\n    let currentRecipe = this.state.currentRecipe;\n    let recipes = this.state.recipes;\n    let recipe;\n    for (var i = 0; i < recipes.length; i++) {\n      if (currentRecipe == recipes[i].recipeTitle) {\n        recipe = recipes[i];\n      }\n    }\n    document.getElementById(\"edit-recipe\").value = recipe.recipeTitle;\n    document.getElementById(\"edit-ingredients\").value = recipe.ingredients;\n    document.getElementById(\"edit-steps\").value = recipe.steps;\n  }\n\n  handleEdit(event) {\n    let recipes = this.state.recipes;\n    let currentRecipe = this.state.currentRecipe;\n    let edit = recipes.filter(recipe => {\n      return currentRecipe !== recipe.recipeTitle;\n    });\n    event.preventDefault();\n    let updatedList = edit.concat({\n      recipeTitle: document.getElementById(\"edit-recipe\").value.split(\"/\"),\n      ingredients: document.getElementById(\"edit-ingredients\").value.split(\"/\"),\n      steps: document.getElementById(\"edit-steps\").value.split(\"/\")\n    });\n\n    setTimeout(() => {\n      localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(updatedList));\n      this.setState({\n        recipes: updatedList,\n        visibility: false\n      });\n      this.toggleVisibility();\n    }, 50);\n  }\n  toggleVisibility(e) {\n    let recipeArray = this.state.recipes;\n    if (e.target.id == \"edit\") {\n      this.setState({\n        dialogMode: \"edit\"\n      });\n      setTimeout(() => this.fillForm(), 20);\n    } else {\n      this.setState({\n        dialogMode: \"add\"\n      });\n    }\n    if (this.state.visibility) {\n      let updatedRecipes = recipeArray.concat({\n        recipeTitle: document.getElementById(\"edit-recipe\").value,\n        ingredients: document\n          .getElementById(\"edit-ingredients\")\n          .value.split(\"/\"),\n        steps: document.getElementById(\"edit-steps\").value.split(\"/\")\n      });\n      localStorage.setItem(\n        \"_bschade18_recipes\",\n        JSON.stringify(updatedRecipes)\n      );\n      this.setState({\n        visibility: false,\n        recipes: updatedRecipes,\n        currentRecipe: document.getElementById(\"edit-recipe\").value,\n        recipeInput: \"\",\n        ingredInput: \"\",\n        stepsInput: \"\"\n      });\n    } else {\n      this.setState({\n        visibility: true\n      });\n    }\n  }\n  closeVisibility() {\n    if (this.state.visibility) {\n      this.setState({\n        visibility: false\n      });\n    } else {\n      this.setState({\n        visibility: true\n      });\n    }\n  }\n\n  setCurrent(e) {\n    this.setState({\n      currentRecipe: e.target.innerHTML\n    });\n  }\n\n  handleDelete() {\n    let recipes = this.state.recipes;\n    let newIndex;\n    let currentRecipe = this.state.currentRecipe;\n\n    for (var i = 0; i < recipes.length; i++) {\n      if (recipes[i].recipeTitle == currentRecipe) {\n        newIndex = i - 1;\n      }\n    }\n    let confirmDelete = window.confirm(\n      \"Are you sure you want to delete this recipe?\"\n    );\n\n    let filter = recipes.filter(recipe => {\n      return recipe.recipeTitle !== currentRecipe;\n    });\n\n    if (confirmDelete == true) {\n      localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(filter));\n      setTimeout(() => {\n        this.setState({\n          recipes: filter,\n          currentRecipe: recipes[newIndex].recipeTitle\n        });\n      }, 20);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"title\">My Recipes</h1>\n        <RecipeList recipes={this.state.recipes} setCurrent={this.setCurrent} />\n        <RecipeDisplay\n          toggleVisibility={this.toggleVisibility}\n          currentRecipe={this.state.currentRecipe}\n          recipes={this.state.recipes}\n          handleDelete={this.handleDelete}\n        />\n        <RecipeForm\n          toggleVisibility={this.toggleVisibility}\n          closeVisibility={this.closeVisibility}\n          visibility={this.state.visibility}\n          dialogMode={this.state.dialogMode}\n          currentRecipe={this.state.currentRecipe}\n          recipes={this.state.recipes}\n          editRecipe={this.handleEdit}\n        />\n      </div>\n    );\n  }\n}\n\nclass RecipeList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let list = this.props.recipes.map((recipe, index) => {\n      return (\n        <div id=\"recipe-title\" key={index} onClick={this.props.setCurrent}>\n          {recipe.recipeTitle}\n        </div>\n      );\n    });\n\n    return <div id=\"recipe-list\">{list}</div>;\n  }\n}\n\nclass RecipeDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let showRecipe;\n    let recipes = this.props.recipes;\n    let currentRecipe = this.props.currentRecipe;\n    let cool = recipes[0].steps;\n    console.log(typeof cool);\n    for (var i = 0; i < recipes.length; i++) {\n      if (currentRecipe == recipes[i].recipeTitle) {\n        showRecipe = (\n          <div className=\"recipeBox\">\n            <div className=\"recipeDisplay\">\n              <div id=\"show-recipe-title\" className=\"recipe-display-pane\">\n                {currentRecipe}\n              </div>\n              <div className=\"recipe-display-pane\">\n                <i\n                  id=\"edit\"\n                  className=\"\"\n                  onClick={this.props.toggleVisibility}\n                  className=\"fas fa-edit\"\n                ></i>\n\n                <i\n                  onClick={this.props.handleDelete}\n                  className=\"fas fa-trash\"\n                ></i>\n              </div>\n            </div>\n            <p className=\"ingredients-heading\">Ingredients:</p>\n            <ul className=\"show-ingredients\">\n              {recipes[i].ingredients.map((ingredient, j) => (\n                <li className=\"list-ingredients\" key={j}>\n                  {ingredient}\n                </li>\n              ))}\n            </ul>\n            <p className=\"directions-heading\">Directions:</p>\n            <ol>\n              {recipes[i].steps.map((step, k) => (\n                <li className=\"list-directions\" key={k}>\n                  {step}\n                </li>\n              ))}\n            </ol>\n            <i\n              onClick={this.props.toggleVisibility}\n              className=\"fas fa-plus\"\n            ></i>\n          </div>\n        );\n      }\n    }\n\n    return <div>{showRecipe}</div>;\n  }\n}\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.visibility) {\n      return (\n        <div id=\"dialog\">\n          <form>\n            {this.props.dialogMode == \"edit\" ? (\n              <div>\n                <div className=\"input-title\">\n                  Edit Recipe\n                  <br />\n                </div>\n                <textarea\n                  id=\"edit-recipe\"\n                  placeholder=\"Recipe Name\"\n                  type=\"text\"\n                />\n                <br />\n                <div className=\"input-title\">\n                  Ingredients\n                  <br />\n                </div>\n                <textarea\n                  id=\"edit-ingredients\"\n                  rows=\"5\"\n                  placeholder='Separate each ingredient with a \"/\"'\n                  type=\"text\"\n                />\n                <br />\n                <div className=\"input-title\">\n                  Steps\n                  <br />\n                </div>\n                <textarea\n                  id=\"edit-steps\"\n                  rows=\"10\"\n                  placeholder='Seperate each direction with a \"/\" '\n                  type=\"text\"\n                />\n                <br />\n              </div>\n            ) : (\n              <div>\n                <div className=\"input-title\">\n                  Add Recipe\n                  <br />\n                </div>\n                <textarea\n                  id=\"edit-recipe\"\n                  placeholder=\"Recipe Name\"\n                  type=\"text\"\n                />\n                <br />\n                <div className=\"input-title\">\n                  Ingredients\n                  <br />\n                </div>\n                <textarea\n                  id=\"edit-ingredients\"\n                  rows=\"5\"\n                  placeholder='Separate each ingredient with a \"/\"'\n                  type=\"text\"\n                />\n                <br />\n                <div className=\"input-title\">\n                  Steps\n                  <br />\n                </div>\n                <textarea\n                  id=\"edit-steps\"\n                  rows=\"10\"\n                  placeholder='Seperate each direction with a \"/\"'\n                  type=\"text\"\n                />\n                <br />\n              </div>\n            )}\n\n            {this.props.dialogMode == \"edit\" ? (\n              <button onClick={this.props.editRecipe}>Save</button>\n            ) : (\n              <button onClick={this.props.toggleVisibility}>Add</button>\n            )}\n\n            <button onClick={this.props.closeVisibility}>Close</button>\n          </form>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}