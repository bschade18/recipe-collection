{"version":3,"sources":["components/RecipeList.js","components/RecipeDisplay.js","components/RecipeForm.js","App.js","serviceWorker.js","index.js"],"names":["RecipeList","recipes","setCurrent","id","map","recipe","index","key","onClick","recipeTitle","RecipeDisplay","showRecipe","currentRecipe","handleForm","handleDelete","i","length","className","recipeIngredients","ingredient","recipeSteps","step","RecipeForm","visibility","dialogMode","onChange","addRecipe","handleEdit","toggleVisibility","placeholder","name","value","type","rows","localStorage","getItem","setItem","JSON","stringify","App","props","state","toLowerCase","alert","newRecipe","split","updatedRecipes","setState","recipeList","filter","editRecipe","updatedList","newIndex","confirmDelete","window","confirm","e","target","fillForm","formRecipe","join","handleFormType","innerText","parse","this","pageMask","display","background","position","top","right","bottom","left","zIndex","style","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAYeA,G,MAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAZ,OACjB,yBAAKC,GAAG,eACLF,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACX,yBAAKH,GAAG,eAAeI,IAAKD,EAAOE,QAASN,GACzCG,EAAOI,mBCmDDC,MAvDf,YAEE,IAF4E,IACxEC,EADmBV,EAAoD,EAApDA,QAASW,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAElDC,EAAI,EAAGA,EAAId,EAAQe,OAAQD,IAC9BH,IAAkBX,EAAQc,GAAGN,cAC/BE,EACE,yBAAKM,UAAU,aACb,yBAAKA,UAAU,iBACb,yBAAKd,GAAG,oBAAoBc,UAAU,uBACnCL,GAEH,yBAAKK,UAAU,uBACb,uBAAGd,GAAG,OAAOK,QAASK,EAAYI,UAAU,gBAE5C,uBAAGT,QAASM,EAAcG,UAAU,iBACpC,uBAAGd,GAAG,UAAUK,QAASK,EAAYI,UAAU,kBAGnD,uBAAGA,UAAU,uBAAb,gBACA,wBAAIA,UAAU,oBACXhB,EAAQc,GAAGG,kBAAkBd,KAAI,SAACe,EAAYb,GAAb,OAChC,wBAAIW,UAAU,mBAAmBV,IAAKD,GACnCa,OAIP,uBAAGF,UAAU,sBAAb,eACA,4BACGhB,EAAQc,GAAGK,YAAYhB,KAAI,SAACiB,EAAMf,GAAP,OAC1B,wBAAIW,UAAU,kBAAkBV,IAAKD,GAClCe,SAQf,OAAIpB,EAAQe,OACH,6BAAML,GAGX,yBAAKM,UAAU,aACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,uBACb,uBAAGd,GAAG,OAAOK,QAASK,EAAYI,UAAU,gBAE5C,uBAAGT,QAASM,EAAcG,UAAU,iBACpC,uBAAGd,GAAG,UAAUK,QAASK,EAAYI,UAAU,oBC8B5CK,MA7Ef,YAUI,IATFC,EASC,EATDA,WACAC,EAQC,EARDA,WACAC,EAOC,EAPDA,SACAhB,EAMC,EANDA,YACAS,EAKC,EALDA,kBACAE,EAIC,EAJDA,YACAM,EAGC,EAHDA,UACAC,EAEC,EAFDA,WACAC,EACC,EADDA,iBAEA,OACEL,GACE,yBAAKN,UAAU,UACb,2BAAOA,UAAU,eACC,QAAfO,EAAuB,aAAe,cACvC,8BAEF,8BACEC,SAAUA,EACVtB,GAAG,cACH0B,YAAY,cACZC,KAAK,cACLC,MAAOtB,EACPuB,KAAK,OACLC,KAAK,KAEJxB,GAEH,6BACA,2BAAOQ,UAAU,eAAjB,cAEE,8BAEF,8BACEd,GAAG,mBACH4B,MAAOb,EACPY,KAAK,oBACLL,SAAUA,EACVI,YAAY,kEACZG,KAAK,QAEJd,GAEH,6BACA,2BAAOD,UAAU,eAAjB,aAEE,8BAEF,8BACEd,GAAG,aACH4B,MAAOX,EACPU,KAAK,cACLL,SAAUA,EACVI,YAAY,qGACZG,KAAK,QAEJZ,GAGH,yBAAKH,UAAU,aACb,4BACEd,GAAG,eACHK,QAAwB,QAAfgB,EAAuBE,EAAYC,GAE5B,QAAfH,EAAuB,MAAQ,QAGlC,4BAAQrB,GAAG,mBAAmBK,QAASoB,GAAvC,YCpDLM,aAAaC,QAAQ,uBACxBD,aAAaE,QAAQ,qBAAsBC,KAAKC,UAbpC,CACZ,CACE7B,YAAa,UACbS,kBAAmB,CAAC,OAAQ,QAAS,cACrCE,YAAa,CACX,+BACA,iBACA,8BACA,0B,IAwOSmB,E,YA/Nb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAwBRd,UAAY,WAAO,IAAD,EACiD,EAAKe,MAA9DxC,EADQ,EACRA,QAASQ,EADD,EACCA,YAAaS,EADd,EACcA,kBAAmBE,EADjC,EACiCA,YADjC,uBAEhB,YAAmBnB,EAAnB,+CAA4B,CAC1B,GAD0B,QACfQ,YAAYiC,gBAAkBjC,EAAYiC,cACnD,OAAOC,MAAM,8BACR,GAAoB,KAAhBlC,EACT,OAAOkC,MAAM,wBAND,kFAUhB,IAAMC,EAAY,CAChBnC,cACAS,kBAAmBA,EAAkB2B,MAAM,KAC3CzB,YAAaA,EAAYyB,MAAM,MAE3BC,EAAc,sBAAO7C,GAAP,CAAgB2C,IAEpCV,aAAaE,QAAQ,qBAAsBC,KAAKC,UAAUQ,IAE1D,EAAKC,SAAS,CACZxB,YAAY,EACZtB,QAAS6C,EACTlC,cAAeH,EACfA,YAAa,GACbS,kBAAmB,GACnBE,YAAa,MAlDE,EAsDnBO,WAAa,WAAO,IAAD,EAOb,EAAKc,MALPxC,EAFe,EAEfA,QACAW,EAHe,EAGfA,cACAH,EAJe,EAIfA,YACAS,EALe,EAKfA,kBACAE,EANe,EAMfA,YAGI4B,EAAa/C,EAAQgD,QACzB,SAAC5C,GAAD,OAAYO,IAAkBP,EAAOI,eAGjCyC,EAAa,CACjBzC,cACAS,kBAAmBA,EAAkB2B,MAAM,KAC3CzB,YAAaA,EAAYyB,MAAM,MAG3BM,EAAW,sBAAOH,GAAP,CAAmBE,IAEpChB,aAAaE,QAAQ,qBAAsBC,KAAKC,UAAUa,IAC1D,EAAKJ,SAAS,CACZ9C,QAASkD,EACT5B,YAAY,EACZd,YAAa,GACbS,kBAAmB,GACnBE,YAAa,MAjFE,EAqFnBN,aAAe,WAIb,IAJoB,IAEhBsC,EAFe,EACgB,EAAKX,MAAhCxC,EADW,EACXA,QAASW,EADE,EACFA,cAGRG,EAAI,EAAGA,EAAId,EAAQe,OAAQD,IAC9Bd,EAAQc,GAAGN,cAAgBG,IAC7BwC,EAAWrC,GAGf,IAAIsC,EAAgBC,OAAOC,QACzB,gDAGEN,EAAShD,EAAQgD,QACnB,SAAC5C,GAAD,OAAYA,EAAOI,cAAgB,EAAKgC,MAAM7B,iBAGhDwC,EAAwB,IAAbA,EAAiB,EAAIA,EAAW,GAErB,IAAlBC,IACqB,IAAnBpD,EAAQe,SACVkB,aAAaE,QAAQ,qBAAsBC,KAAKC,UAAUW,IAC1D,EAAKF,SAAS,CACZnC,cAAe,MAGnBsB,aAAaE,QAAQ,qBAAsBC,KAAKC,UAAUW,IAC1D,EAAKF,SAAS,CACZ9C,QAASgD,EACTrC,cAAeX,EAAQmD,GAAU3C,gBAlHpB,EAuHnBgB,SAAW,SAAC+B,GAAO,IAAD,EACQA,EAAEC,OAAlB3B,EADQ,EACRA,KAAMC,EADE,EACFA,MACd,EAAKgB,SAAL,eACGjB,EAAOC,KA1HO,EA8HnB2B,SAAW,WACT,IAAMC,EAAa,EAAKlB,MAAMxC,QAAQgD,QACpC,SAAC5C,GAAD,OAAYA,EAAOI,cAAgB,EAAKgC,MAAM7B,iBAGhD,EAAKmC,SAAS,CACZtC,YAAakD,EAAW,GAAGlD,YAC3BS,kBAAmByC,EAAW,GAAGzC,kBAAkB0C,KAAK,OACxDxC,YAAauC,EAAW,GAAGvC,YAAYwC,KAAK,UAtI7B,EA0InBC,eAAiB,SAACL,GACI,SAAhBA,EAAEC,OAAOtD,IACX,EAAK4C,SAAS,CACZvB,WAAY,OACZD,YAAY,IAEd,EAAKmC,YAEL,EAAKX,SAAS,CACZvB,WAAY,MACZD,YAAY,KApJC,EAyJnBK,iBAAmB,WACjB,EAAKmB,SAAS,CACZxB,YAAa,EAAKkB,MAAMlB,WACxBd,YAAa,GACbS,kBAAmB,GACnBE,YAAa,MA9JE,EAkKnBlB,WAAa,SAACsD,GACZ,EAAKT,SAAS,CACZnC,cAAe4C,EAAEC,OAAOK,aAlK1B,EAAKrB,MAAQ,CACXxC,QAASoC,KAAK0B,MAAM7B,aAAaC,QAAQ,uBACzCvB,cAAe,GACfH,YAAa,GACbS,kBAAmB,GACnBE,YAAa,GACbG,YAAY,EACZC,WAAY,IATG,E,iFAcjB,IAAIvB,EAAUoC,KAAK0B,MAAM7B,aAAaC,QAAQ,uBAE9C,GAAIlC,EAAQe,OAAS,EAAG,CACtB,IAAIX,EAASJ,EAAQ,GAAGQ,YAExBuD,KAAKjB,SAAS,CACZnC,cAAeP,O,+BAqJnB,IAAI4D,EAAW,CACbC,QAAS,OACTC,WAAY,qBACZC,SAAU,QACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,OAAQ,GAeV,OAZIT,KAAKvB,MAAMlB,aACb0C,EAAW,CACTC,QAAS,QACTC,WAAY,qBACZC,SAAU,QACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,OAAQ,IAIV,yBAAKtE,GAAG,OACN,wBAAIA,GAAG,SAAP,cACA,kBAAC,EAAD,CACEF,QAAS+D,KAAKvB,MAAMxC,QACpBQ,YAAauD,KAAKvB,MAAMhC,YACxBS,kBAAmB8C,KAAKvB,MAAMvB,kBAC9BE,YAAa4C,KAAKvB,MAAMrB,YACxBR,cAAeoD,KAAKvB,MAAM7B,cAC1Bc,UAAWsC,KAAKtC,UAChBwB,WAAYc,KAAKrC,WACjBC,iBAAkBoC,KAAKpC,iBACvBL,WAAYyC,KAAKvB,MAAMlB,WACvBC,WAAYwC,KAAKvB,MAAMjB,WACvBC,SAAUuC,KAAKvC,SACfE,WAAYqC,KAAKrC,aAEnB,kBAAC,EAAD,CAAY1B,QAAS+D,KAAKvB,MAAMxC,QAASC,WAAY8D,KAAK9D,aAC1D,kBAAC,EAAD,CACED,QAAS+D,KAAKvB,MAAMxC,QACpBW,cAAeoD,KAAKvB,MAAM7B,cAC1BE,aAAckD,KAAKlD,aACnBD,WAAYmD,KAAKH,iBAGnB,yBAAKa,MAAOT,S,GA1NFU,aCVEC,QACW,cAA7BtB,OAAOuB,SAASC,UAEe,UAA7BxB,OAAOuB,SAASC,UAEhBxB,OAAOuB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4a874894.chunk.js","sourcesContent":["import React from 'react';\n\nconst RecipeList = ({ recipes, setCurrent }) => (\n  <div id=\"recipe-list\">\n    {recipes.map((recipe, index) => (\n      <div id=\"recipe-title\" key={index} onClick={setCurrent}>\n        {recipe.recipeTitle}\n      </div>\n    ))}\n  </div>\n);\n\nexport default RecipeList;\n","import React from 'react';\n\nfunction RecipeDisplay({ recipes, currentRecipe, handleForm, handleDelete }) {\n  let showRecipe;\n  for (var i = 0; i < recipes.length; i++) {\n    if (currentRecipe === recipes[i].recipeTitle) {\n      showRecipe = (\n        <div className=\"recipeBox\">\n          <div className=\"recipeDisplay\">\n            <div id=\"show-recipe-title\" className=\"recipe-display-pane\">\n              {currentRecipe}\n            </div>\n            <div className=\"recipe-display-pane\">\n              <i id=\"edit\" onClick={handleForm} className=\"fas fa-edit\"></i>\n\n              <i onClick={handleDelete} className=\"fas fa-trash\"></i>\n              <i id=\"add-btn\" onClick={handleForm} className=\"fas fa-plus\"></i>\n            </div>\n          </div>\n          <p className=\"ingredients-heading\">Ingredients:</p>\n          <ul className=\"show-ingredients\">\n            {recipes[i].recipeIngredients.map((ingredient, index) => (\n              <li className=\"list-ingredients\" key={index}>\n                {ingredient}\n              </li>\n            ))}\n          </ul>\n          <p className=\"directions-heading\">Directions:</p>\n          <ol>\n            {recipes[i].recipeSteps.map((step, index) => (\n              <li className=\"list-directions\" key={index}>\n                {step}\n              </li>\n            ))}\n          </ol>\n        </div>\n      );\n    }\n  }\n  if (recipes.length) {\n    return <div>{showRecipe}</div>;\n  } else {\n    return (\n      <div className=\"recipeBox\">\n        <div className=\"recipeDisplay\">\n          <div className=\"recipe-display-pane\">\n            <i id=\"edit\" onClick={handleForm} className=\"fas fa-edit\"></i>\n\n            <i onClick={handleDelete} className=\"fas fa-trash\"></i>\n            <i id=\"add-btn\" onClick={handleForm} className=\"fas fa-plus\"></i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RecipeDisplay;\n","import React from 'react';\n\nfunction RecipeForm({\n  visibility,\n  dialogMode,\n  onChange,\n  recipeTitle,\n  recipeIngredients,\n  recipeSteps,\n  addRecipe,\n  handleEdit,\n  toggleVisibility,\n}) {\n  return (\n    visibility && (\n      <div className=\"dialog\">\n        <label className=\"input-title\">\n          {dialogMode === 'add' ? 'Add Recipe' : 'Edit Recipe'}\n          <br />\n        </label>\n        <textarea\n          onChange={onChange}\n          id=\"edit-recipe\"\n          placeholder=\"Recipe Name\"\n          name=\"recipeTitle\"\n          value={recipeTitle}\n          type=\"text\"\n          rows=\"1\"\n        >\n          {recipeTitle}\n        </textarea>\n        <br />\n        <label className=\"input-title\">\n          Ingredients\n          <br />\n        </label>\n        <textarea\n          id=\"edit-ingredients\"\n          value={recipeIngredients}\n          name=\"recipeIngredients\"\n          onChange={onChange}\n          placeholder='Separate each ingredient with a \"/\" : Eggs / Flour / Cookie Mix'\n          type=\"text\"\n        >\n          {recipeIngredients}\n        </textarea>\n        <br />\n        <label className=\"input-title\">\n          Directions\n          <br />\n        </label>\n        <textarea\n          id=\"edit-steps\"\n          value={recipeSteps}\n          name=\"recipeSteps\"\n          onChange={onChange}\n          placeholder='Seperate each direction with a \"/\" : Mix eggs and flour in a bowl / Add cookie mix / Cook in oven '\n          type=\"text\"\n        >\n          {recipeSteps}\n        </textarea>\n\n        <div className=\"form-btns\">\n          <button\n            id=\"add-save-btn\"\n            onClick={dialogMode === 'add' ? addRecipe : handleEdit}\n          >\n            {dialogMode === 'add' ? 'Add' : 'Save'}\n          </button>\n\n          <button id=\"close-dialog-btn\" onClick={toggleVisibility}>\n            Close\n          </button>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default RecipeForm;\n","import React, { Component } from 'react';\nimport './App.css';\nimport RecipeList from './components/RecipeList';\nimport RecipeDisplay from './components/RecipeDisplay';\nimport RecipeForm from './components/RecipeForm';\n\nlet starter = [\n  {\n    recipeTitle: 'Cookies',\n    recipeIngredients: ['Eggs', 'Flour', 'Cookie mix'],\n    recipeSteps: [\n      'Mix eggs and flour in a bowl',\n      'Add cookie mix',\n      'Cook in oven for 12 minutes',\n      'Serve and enjoy :)',\n    ],\n  },\n];\nif (!localStorage.getItem('_bschade18_recipes')) {\n  localStorage.setItem('_bschade18_recipes', JSON.stringify(starter));\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: JSON.parse(localStorage.getItem('_bschade18_recipes')),\n      currentRecipe: '',\n      recipeTitle: '',\n      recipeIngredients: '',\n      recipeSteps: '',\n      visibility: false,\n      dialogMode: '',\n    };\n  }\n\n  componentDidMount() {\n    let recipes = JSON.parse(localStorage.getItem('_bschade18_recipes'));\n\n    if (recipes.length > 0) {\n      let recipe = recipes[0].recipeTitle;\n\n      this.setState({\n        currentRecipe: recipe,\n      });\n    }\n  }\n\n  addRecipe = () => {\n    const { recipes, recipeTitle, recipeIngredients, recipeSteps } = this.state;\n    for (let recipe of recipes) {\n      if (recipe.recipeTitle.toLowerCase() === recipeTitle.toLowerCase()) {\n        return alert('That recipe already exists');\n      } else if (recipeTitle === '') {\n        return alert('Enter a recipe name');\n      }\n    }\n\n    const newRecipe = {\n      recipeTitle,\n      recipeIngredients: recipeIngredients.split('/'),\n      recipeSteps: recipeSteps.split('/'),\n    };\n    const updatedRecipes = [...recipes, newRecipe];\n\n    localStorage.setItem('_bschade18_recipes', JSON.stringify(updatedRecipes));\n\n    this.setState({\n      visibility: false,\n      recipes: updatedRecipes,\n      currentRecipe: recipeTitle,\n      recipeTitle: '',\n      recipeIngredients: '',\n      recipeSteps: '',\n    });\n  };\n\n  handleEdit = () => {\n    const {\n      recipes,\n      currentRecipe,\n      recipeTitle,\n      recipeIngredients,\n      recipeSteps,\n    } = this.state;\n\n    const recipeList = recipes.filter(\n      (recipe) => currentRecipe !== recipe.recipeTitle\n    );\n\n    const editRecipe = {\n      recipeTitle,\n      recipeIngredients: recipeIngredients.split('/'),\n      recipeSteps: recipeSteps.split('/'),\n    };\n\n    const updatedList = [...recipeList, editRecipe];\n\n    localStorage.setItem('_bschade18_recipes', JSON.stringify(updatedList));\n    this.setState({\n      recipes: updatedList,\n      visibility: false,\n      recipeTitle: '',\n      recipeIngredients: '',\n      recipeSteps: '',\n    });\n  };\n\n  handleDelete = () => {\n    const { recipes, currentRecipe } = this.state;\n    let newIndex;\n\n    for (var i = 0; i < recipes.length; i++) {\n      if (recipes[i].recipeTitle === currentRecipe) {\n        newIndex = i;\n      }\n    }\n    let confirmDelete = window.confirm(\n      'Are you sure you want to delete this recipe?'\n    );\n\n    let filter = recipes.filter(\n      (recipe) => recipe.recipeTitle !== this.state.currentRecipe\n    );\n\n    newIndex = newIndex === 0 ? 1 : newIndex - 1;\n\n    if (confirmDelete === true) {\n      if (recipes.length === 0) {\n        localStorage.setItem('_bschade18_recipes', JSON.stringify(filter));\n        this.setState({\n          currentRecipe: '',\n        });\n      }\n      localStorage.setItem('_bschade18_recipes', JSON.stringify(filter));\n      this.setState({\n        recipes: filter,\n        currentRecipe: recipes[newIndex].recipeTitle,\n      });\n    }\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  fillForm = () => {\n    const formRecipe = this.state.recipes.filter(\n      (recipe) => recipe.recipeTitle === this.state.currentRecipe\n    );\n\n    this.setState({\n      recipeTitle: formRecipe[0].recipeTitle,\n      recipeIngredients: formRecipe[0].recipeIngredients.join(' / '),\n      recipeSteps: formRecipe[0].recipeSteps.join(' / '),\n    });\n  };\n\n  handleFormType = (e) => {\n    if (e.target.id === 'edit') {\n      this.setState({\n        dialogMode: 'edit',\n        visibility: true,\n      });\n      this.fillForm();\n    } else {\n      this.setState({\n        dialogMode: 'add',\n        visibility: true,\n      });\n    }\n  };\n\n  toggleVisibility = () => {\n    this.setState({\n      visibility: !this.state.visibility,\n      recipeTitle: '',\n      recipeIngredients: '',\n      recipeSteps: '',\n    });\n  };\n\n  setCurrent = (e) => {\n    this.setState({\n      currentRecipe: e.target.innerText,\n    });\n  };\n\n  render() {\n    let pageMask = {\n      display: 'none',\n      background: 'rgba(0, 0, 0, 0.4)',\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      zIndex: 1,\n    };\n\n    if (this.state.visibility) {\n      pageMask = {\n        display: 'block',\n        background: 'rgba(0, 0, 0, 0.5)',\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        zIndex: 1,\n      };\n    }\n    return (\n      <div id=\"App\">\n        <h1 id=\"title\">My Recipes</h1>\n        <RecipeForm\n          recipes={this.state.recipes}\n          recipeTitle={this.state.recipeTitle}\n          recipeIngredients={this.state.recipeIngredients}\n          recipeSteps={this.state.recipeSteps}\n          currentRecipe={this.state.currentRecipe}\n          addRecipe={this.addRecipe}\n          editRecipe={this.handleEdit}\n          toggleVisibility={this.toggleVisibility}\n          visibility={this.state.visibility}\n          dialogMode={this.state.dialogMode}\n          onChange={this.onChange}\n          handleEdit={this.handleEdit}\n        />\n        <RecipeList recipes={this.state.recipes} setCurrent={this.setCurrent} />\n        <RecipeDisplay\n          recipes={this.state.recipes}\n          currentRecipe={this.state.currentRecipe}\n          handleDelete={this.handleDelete}\n          handleForm={this.handleFormType}\n        />\n\n        <div style={pageMask}></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}