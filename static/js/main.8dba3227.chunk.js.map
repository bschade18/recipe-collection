{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["localStorage","setItem","JSON","stringify","recipeTitle","ingredients","steps","App","props","state","visibility","currentRecipe","recipes","parse","getItem","dialogMode","addRecipe","bind","closeVisibility","setCurrent","fillForm","handleDelete","handleEdit","handleFormType","recipe","this","setState","i","length","document","getElementById","value","join","event","updatedList","filter","concat","split","setTimeout","e","target","id","recipeArray","recipeList","push","toLowerCase","includes","alert","updatedRecipes","recipeInput","ingredInput","stepsInput","innerHTML","newIndex","confirmDelete","window","confirm","formText","formID","formFunctions","toggleVisibility","handleForm","editRecipe","React","Component","RecipeList","list","map","index","key","onClick","RecipeDisplay","showRecipe","className","ingredient","j","step","k","RecipeForm","placeholder","type","cols","rows","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8dba3227.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nlet starter = [\n  {\n    recipeTitle: \"Cookies\",\n    ingredients: [\"Eggs\", \"Flour\", \"Cookie mix\"],\n    steps: [\n      \"Mix eggs and flour in a bowl\",\n      \"Add cookie mix\",\n      \"Cook in oven for 12 minutes\",\n      \"Serve and enjoy :)\"\n    ]\n  }\n];\nlocalStorage.setItem(\"_bschade18_recipes\", JSON.stringify(starter));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibility: false,\n      currentRecipe: \"\",\n      recipes: JSON.parse(localStorage.getItem(\"_bschade18_recipes\")),\n      dialogMode: \"\"\n    };\n    this.addRecipe = this.addRecipe.bind(this);\n\n    this.closeVisibility = this.closeVisibility.bind(this);\n    this.setCurrent = this.setCurrent.bind(this);\n\n    this.fillForm = this.fillForm.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n    this.handleFormType = this.handleFormType.bind(this);\n  }\n  componentDidMount() {\n    let recipes = localStorage.getItem(\"_bschade18_recipes\");\n    let recipesObj = JSON.parse(recipes);\n\n    let recipe = recipesObj[0].recipeTitle;\n\n    this.setState({\n      currentRecipe: recipe\n    });\n  }\n  fillForm() {\n    let currentRecipe = this.state.currentRecipe;\n    let recipes = this.state.recipes;\n    let recipe;\n    for (var i = 0; i < recipes.length; i++) {\n      if (currentRecipe == recipes[i].recipeTitle) {\n        recipe = recipes[i];\n      }\n    }\n    document.getElementById(\"edit-recipe\").value = recipe.recipeTitle;\n    document.getElementById(\"edit-ingredients\").value = recipe.ingredients.join(\n      \" / \"\n    );\n    document.getElementById(\"edit-steps\").value = recipe.steps.join(\" / \");\n  }\n\n  handleEdit(event) {\n    let recipes = this.state.recipes;\n    let currentRecipe = this.state.currentRecipe;\n    let edit = recipes.filter(recipe => {\n      return currentRecipe !== recipe.recipeTitle;\n    });\n    let updatedList = edit.concat({\n      recipeTitle: document.getElementById(\"edit-recipe\").value,\n      ingredients: document.getElementById(\"edit-ingredients\").value.split(\"/\"),\n      steps: document.getElementById(\"edit-steps\").value.split(\"/\")\n    });\n\n    setTimeout(() => {\n      localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(updatedList));\n      this.setState({\n        recipes: updatedList,\n        visibility: false\n      });\n    }, 50);\n  }\n\n  handleFormType(e) {\n    if (e.target.id == \"edit\") {\n      this.setState({\n        dialogMode: \"edit\",\n        visibility: true\n      });\n      setTimeout(() => this.fillForm(), 20);\n    } else {\n      this.setState({\n        dialogMode: \"add\",\n        visibility: true\n      });\n    }\n  }\n  addRecipe(e) {\n    let recipeArray = this.state.recipes;\n    let recipeList = [];\n    for (var i = 0; i < recipeArray.length; i++) {\n      recipeList.push(recipeArray[i].recipeTitle.toLowerCase());\n    }\n    if (\n      recipeList.includes(\n        document.getElementById(\"edit-recipe\").value.toLowerCase()\n      )\n    ) {\n      alert(\"That recipe already exists\");\n      return;\n    } else if (\n      document.getElementById(\"edit-recipe\").value.toLowerCase() === \"\"\n    ) {\n      alert(\"Enter a recipe name\");\n      return;\n    }\n    let updatedRecipes = recipeArray.concat({\n      recipeTitle: document.getElementById(\"edit-recipe\").value,\n      ingredients: document.getElementById(\"edit-ingredients\").value.split(\"/\"),\n      steps: document.getElementById(\"edit-steps\").value.split(\"/\")\n    });\n    localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(updatedRecipes));\n    this.setState({\n      visibility: false,\n      recipes: updatedRecipes,\n      currentRecipe: document.getElementById(\"edit-recipe\").value,\n      recipeInput: \"\",\n      ingredInput: \"\",\n      stepsInput: \"\"\n    });\n  }\n\n  closeVisibility() {\n    if (this.state.visibility) {\n      this.setState({\n        visibility: false\n      });\n    } else {\n      this.setState({\n        visibility: true\n      });\n    }\n  }\n\n  setCurrent(e) {\n    this.setState({\n      currentRecipe: e.target.innerHTML\n    });\n  }\n\n  handleDelete() {\n    let recipes = this.state.recipes;\n    let currentRecipe = this.state.currentRecipe;\n    let newIndex;\n\n    for (var i = 0; i < recipes.length; i++) {\n      if (recipes[i].recipeTitle == currentRecipe) {\n        newIndex = i - 1;\n      }\n    }\n    let confirmDelete = window.confirm(\n      \"Are you sure you want to delete this recipe?\"\n    );\n\n    let filter = recipes.filter(recipe => {\n      return recipe.recipeTitle !== currentRecipe;\n    });\n\n    if (confirmDelete == true) {\n      if (newIndex < 0) {\n        localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(filter));\n        setTimeout(() => {\n          this.setState({\n            recipes: filter,\n            currentRecipe: recipes[1].recipeTitle\n          });\n        }, 20);\n      } else {\n        localStorage.setItem(\"_bschade18_recipes\", JSON.stringify(filter));\n        setTimeout(() => {\n          this.setState({\n            recipes: filter,\n            currentRecipe: recipes[newIndex].recipeTitle\n          });\n        }, 20);\n      }\n    }\n  }\n\n  render() {\n    let formText =\n      this.state.dialogMode === \"add\"\n        ? [\"Add Recipe\", \"Add\"]\n        : [\"Edit Recipe\", \"Save\"];\n    let formID = this.state.dialogMode === \"add\" ? [\"add\"] : [\"edit\"];\n    let formFunctions =\n      this.state.dialogMode === \"add\" ? this.addRecipe : this.handleEdit;\n    return (\n      <div>\n        <h1 id=\"title\">My Recipes</h1>\n        <RecipeList recipes={this.state.recipes} setCurrent={this.setCurrent} />\n        <RecipeDisplay\n          toggleVisibility={this.toggleVisibility}\n          currentRecipe={this.state.currentRecipe}\n          recipes={this.state.recipes}\n          handleDelete={this.handleDelete}\n          handleForm={this.handleFormType}\n        />\n        <RecipeForm\n          addRecipe={this.addRecipe}\n          closeVisibility={this.closeVisibility}\n          visibility={this.state.visibility}\n          dialogMode={this.state.dialogMode}\n          currentRecipe={this.state.currentRecipe}\n          recipes={this.state.recipes}\n          editRecipe={this.handleEdit}\n          formText={formText}\n          formID={formID}\n          formFunctions={formFunctions}\n        />\n      </div>\n    );\n  }\n}\n\nclass RecipeList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let list = this.props.recipes.map((recipe, index) => {\n      return (\n        <div id=\"recipe-title\" key={index} onClick={this.props.setCurrent}>\n          {recipe.recipeTitle}\n        </div>\n      );\n    });\n\n    return <div id=\"recipe-list\">{list}</div>;\n  }\n}\n\nclass RecipeDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let showRecipe;\n    let recipes = this.props.recipes;\n    let currentRecipe = this.props.currentRecipe;\n    let cool = recipes[0].steps;\n    for (var i = 0; i < recipes.length; i++) {\n      if (currentRecipe == recipes[i].recipeTitle) {\n        showRecipe = (\n          <div className=\"recipeBox\">\n            <div className=\"recipeDisplay\">\n              <div id=\"show-recipe-title\" className=\"recipe-display-pane\">\n                {currentRecipe}\n              </div>\n              <div className=\"recipe-display-pane\">\n                <i\n                  id=\"edit\"\n                  className=\"\"\n                  onClick={this.props.handleForm}\n                  className=\"fas fa-edit\"\n                ></i>\n\n                <i\n                  onClick={this.props.handleDelete}\n                  className=\"fas fa-trash\"\n                ></i>\n                <i\n                  id=\"add-btn\"\n                  onClick={this.props.handleForm}\n                  className=\"fas fa-plus\"\n                ></i>\n              </div>\n            </div>\n            <p className=\"ingredients-heading\">Ingredients:</p>\n            <ul className=\"show-ingredients\">\n              {recipes[i].ingredients.map((ingredient, j) => (\n                <li className=\"list-ingredients\" key={j}>\n                  {ingredient}\n                </li>\n              ))}\n            </ul>\n            <p className=\"directions-heading\">Directions:</p>\n            <ol>\n              {recipes[i].steps.map((step, k) => (\n                <li className=\"list-directions\" key={k}>\n                  {step}\n                </li>\n              ))}\n            </ol>\n          </div>\n        );\n      }\n    }\n\n    return <div>{showRecipe}</div>;\n  }\n}\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.visibility) {\n      return (\n        <div id=\"dialog\">\n          <div>\n            <div className=\"input-title\">\n              {this.props.formText[0]}\n              <br />\n            </div>\n            <textarea\n              id=\"edit-recipe\"\n              placeholder=\"Recipe Name\"\n              type=\"text\"\n              cols=\"30\"\n              rows=\"1\"\n            />\n            <br />\n            <div className=\"input-title\">\n              Ingredients\n              <br />\n            </div>\n            <textarea\n              id=\"edit-ingredients\"\n              cols=\"30\"\n              rows=\"6\"\n              placeholder='Separate each ingredient with a \"/\" :     Eggs / Flour / Cookie Mix'\n              type=\"text\"\n            />\n            <br />\n            <div className=\"input-title\">\n              Directions\n              <br />\n            </div>\n            <textarea\n              id=\"edit-steps\"\n              cols=\"30\"\n              rows=\"11\"\n              placeholder='Seperate each direction with a \"/\" :        Mix eggs and flour in a bowl / Add cookie mix / Cook in oven '\n              type=\"text\"\n            />\n          </div>\n          <div className=\"form-btns\">\n            <button\n              onClick={this.props.formFunctions}\n              id={this.props.formID[0]}\n            >\n              {this.props.formText[1]}\n            </button>\n\n            <button onClick={this.props.closeVisibility}>Close</button>\n          </div>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}